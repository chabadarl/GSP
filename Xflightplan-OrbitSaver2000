// GTO.ks
// This program launches a ship from the KSC and flies it into orbit

//Flight Parameter
set targetApoapsis to 78000.    //Target apoapsis in meters
set targetPeriapsis to 78000.   //Target periapsis in meters
set altStartGT to 10000.        //Altitude to start Gravity Turn
set targetInclinaison to 0.     // Target Inclinaison  in degree
set altToNoSteer to 50000.      // altitude where steer =0

set target to vessel("Podster's Scrap").
print "waiting!".
wait 10.
set warp to 3.
until time > 41045{ print round(time:seconds,0) at (10,10).}
set warp to 0.
set endwaoting to time.
print "target in place".



set main_sequence to list(
  "Prelaunch", lastChance@,
  "Launch", tooLate@,
  "First Climb", toBackOff@,
  "Gravity Turn", theCriticalPart@,
  "Climb", waitingForActualSpace@,
  "Final Burn", lastButNotLeast@,
  "Final Settings", inSpace@
).



set events to lex(
  "Stage Check", Stage_check@,
  "Info Print", printing@
).

function lastChance{
  parameter mission.

  SAS off.
  RCS on.
  lights off.
  gear off.
  clearscreen.

  //Inialisation of  parameter
  set finalTVAL TO 0.         //No throttle to start with
  set targetPitch TO 90.     //Starting  up
  set TVAL to 0.
  set prevThrust to 0.
  EVE_Staging(FALSE).

  // Initiate Locking of steer and throttle
  set rota to 90.
  LOCK steering to heading (90-targetInclinaison ,targetPitch)+r(0,0,-rota).
  LOCK throttle to finalTVAL.

  // end of initialisation
  mission["next"]().
}

function tooLate{
  parameter mission.

  print "3...".
  wait 1.
  print "2...".
  wait 1.
  print "1...".
  wait 1.
  print "Here We Go !".
  set TVAL to 1.               //Throttle up to 100%
  set targetPitch TO 90.
  stage.                           //Same thing as pressing Space-bar
  EVE_Staging(FALSE).
  clearscreen.
  mission["next"]().
  }

function toBackOff{
  parameter mission.
  set TVAL to 1.
  set targetPitch TO 85.
  set rota to max(0,90*(1-alt:radar/5000)).
  if ship:altitude > altStartGT {
  //Once altitude is higher than 10km, go to Gravity Turn mode
  mission["next"]().
  }
}

function theCriticalPart{
  //Gravity turn
  parameter mission.

  set targetPitch to max( 5, 85 * (1 - sqrt((alt:radar-10000) / (altToNoSteer-10000)))).            //Pitch over gradually until levelling out to 5 degrees at 50km
  set TVAL to 1.
  if ship:velocity:surface:mag >(100 + 2000*(alt:radar/altToNoSteer)) set TVAL to 0.50.

  if ship:apoapsis > targetApoapsis - 200 {
    mission["next"]().
  }
}

function waitingForActualSpace{
  //Coast to Ap
  parameter mission.

  set targetPitch to 3. //Stay pointing 3 degrees above horizon
  set TVAL to 0. //Engines off.
  if ship:apoapsis < targetApoapsis  {
    set TVAL to 0.1.
  }

  if (ship:altitude > 70000) and (eta:apoapsis > 60) and (verticalspeed > 0) {
    panels on.
    if warp = 0 {        // If we are not time warping
    wait 1.         //Wait to make sure the ship is stable
    set warp TO 3. //Be really careful about warping
    }
  }.
  else if eta:apoapsis < 60 {
    set warp to 0.
    mission["next"]().
  }
}

function lastButNotLeast{
  //Burn to raise Periapsis
  parameter mission.
  set targetPitch to 0.
  if eta:apoapsis < 10 or verticalspeed < 0 { //If we're less 5 seconds from Ap or loosing altitude
    set TVAL to 1.
  }
  if (ship:periapsis > targetPeriapsis) or (ship:periapsis > targetApoapsis * 0.95) or (ship:periapsis>70000 and ship:apoapsis>targetApoapsis*1.1)  {
    //If the periapsis is high enough or getting close to the apoapsis
    set TVAL to 0.
    mission["next"]().
  }
}

function inSpace{
  //Final touches
  parameter mission.

  set TVAL to 0. //Shutdown engine.
  panels on.     //Deploy solar panels
  lights on.     // blop
  EVE_telco().
  unlock steering.
  notify("SHIP SHOULD NOW BE IN SPACE!").
  set ship:control:pilotmainthrottle to 0.
  clearscreen.
  mission["terminate"]().
}

function printing{
  //Print data to screen.
  parameter mission.

  print "RUNMODE    : " + mission["runmode"]() + "     " at (5,4).
  print "ALTITUDE   : " + round(ship:altitude) + " m     " at (5,5).
  print "APOAPSIS   : " + round(ship:apoapsis) + " m     " at (5,6).
  print "PERIAPSIS  : " + round(ship:periapsis) + " m     " at (5,7).
  print "ETA TO AP  : " + round(eta:apoapsis) + " s     " at (5,8).
  print "PITCH      : " + round (targetPitch,1) + " Â°     " at (5,9).
  print "TROTTLE    : " + finalTVAL*100 + " %     " at (5,10).
  print "MAX THRUST : " + round(ship:maxthrust,0) + "/" + round(prevthrust,0) + "  kN    " at (5,11).
  print "VELOCITY   : " + round(ship:velocity:surface:mag,2) + "  m/s     " at (5,12).
  print "MASS       : " + round(ship:mass,2) + " Tons     " at (5,13) .
  print "MAX SPEED  : " + round((100 + 2000*(alt:radar/altToNoSteer)),1)+ " m/s     " at (5,14) .
  print "Stage fuel : " + round(stage:liquidfuel,2) at (5,17).
}

function Stage_check {
  parameter mission.
  EVE_Staging(true).
  lock throttle to finalTVAL.
  set finalTVAL to TVAL.
}



run_mission(main_sequence,events).
